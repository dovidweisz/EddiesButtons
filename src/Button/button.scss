@import "../settings";

@mixin bh-button {
  @include bh-button-base;
  @include sync-line-height($bh-button-height);
  padding: 0 2em;
  font-weight: $bh-button-default-weight;
  border: rem-calc(1) solid;
}
@mixin bh-button-base {
  // @include disable-mouse-outline; // requires whatinput js
  display: inline-block;
  text-align: center;
  cursor: pointer;
  -webkit-appearance: none; // sass-lint:disable-line no-vendor-prefixes
  vertical-align: middle;
  border-radius: $button-radius;
  margin: $button-margin;
}

@mixin bh-style-button(
	$background-color,
	$color: $white
) {
  background-color: $background-color;
  color: $color;
  border-color: $background-color;
}

@mixin bh-style-button-ghost($background-color) {
  &.ghost {
    background-color: transparent;
    color: $background-color;
  }
}

.button {
  @include bh-button;

  // width modifiers
  &.wide {
    padding: 0 3em;
  }

  &.xWide {
    padding: 0 4em;
  }

  &.fitWidth {
    display: block;
    width: 100%;
    margin-left: 0;
    margin-right: 0;
    padding: 0;
  }

  // shrinks height and width
  &.small {
    @include sync-line-height(2em);
    padding: 0 1em;
  }

  // expands height only
  &.jumbo {
    @include sync-line-height(3em);
  }
  $-default-color-list: map_get($bh-button-colors, $bh-default-button-color);
  @include bh-style-button($-default-color-list...);
  @each $name, $color in $bh-button-colors {
    &.#{$name} {
      @if ($name != $bh-default-button-color) {
        @include bh-style-button($color...);
      }

      @if (index($bh-button-ghostable-colors , $name )) {
        @include bh-style-button-ghost($color...);
      }
    }
  }

  // Disabled style - use foundations method for now
  &.disabled,
  &[disabled] {
    @include button-disabled;
  }
}
